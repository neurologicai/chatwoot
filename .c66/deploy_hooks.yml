hooks:
  before_deploy:
    - name: "Verificar configuração do banco"
      command: "ruby -e \"require 'erb'; require 'yaml'; YAML.load(ERB.new(File.read('config/database.yml')).result)\""
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: true

    - name: "Instalar Node.js 23 e pnpm"
      command: |
        echo "=== Status atual do Node.js ==="
        node --version || echo "Node.js não encontrado"
        which node || echo "Node.js não no PATH"
        echo "==============================="
        
        # Forçar instalação do Node.js 23.x
        echo "Instalando Node.js 23.x..."
        curl -fsSL https://deb.nodesource.com/setup_23.x | sudo -E bash -
        sudo apt-get install -y nodejs
        
        # Verificar se a instalação foi bem-sucedida
        echo "Verificando instalação do Node.js..."
        node --version
        npm --version
        
        # Instalar pnpm baseado na versão do Node.js
        node_version=$(node --version | sed 's/v//' | cut -d. -f1)
        if [ "$node_version" -ge 18 ]; then
          pnpm_version="10.2.0"
        else
          pnpm_version="8.15.1"
        fi
        
        echo "Instalando pnpm $pnpm_version para Node.js $node_version..."
        sudo npm install -g pnpm@$pnpm_version
        
        # Criar symlinks para garantir disponibilidade
        sudo ln -sf /usr/local/lib/node_modules/pnpm/bin/pnpm.cjs /usr/local/bin/pnpm 2>/dev/null || sudo ln -sf /usr/local/lib/node_modules/pnpm/bin/pnpm.js /usr/local/bin/pnpm
        sudo ln -sf /usr/local/lib/node_modules/pnpm/bin/pnpx.cjs /usr/local/bin/pnpx 2>/dev/null || sudo ln -sf /usr/local/lib/node_modules/pnpm/bin/pnpx.js /usr/local/bin/pnpx
        
        # Configurar PATH globalmente para o sistema
        echo 'export PATH="/usr/local/bin:/usr/local/lib/node_modules/.bin:$PATH"' | sudo tee -a /etc/environment
        echo 'export PATH="/usr/local/bin:/usr/local/lib/node_modules/.bin:$PATH"' | sudo tee -a /etc/profile
        
        echo "=== Verificação final ==="
        node --version
        npm --version
        which pnpm
        pnpm --version
        echo "========================="
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: true

    - name: "Verificar instalação final"
      command: |
        echo "Verificando se tudo está funcionando..."
        export PATH="/usr/local/bin:/usr/local/lib/node_modules/.bin:$PATH"
        echo "Node.js: $(node --version)"
        echo "npm: $(npm --version)" 
        echo "pnpm location: $(which pnpm)"
        echo "pnpm version: $(pnpm --version)"
        echo "PATH atual: $PATH"
        echo "Instalação concluída com sucesso!"
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: true

  after_deploy:
    - name: "Rodar migrações"
      command: "bundle exec rails db:migrate"
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: true

    - name: "Verificar conexão com o banco"
      command: "bundle exec rails runner \"ActiveRecord::Base.connection.execute('SELECT 1')\""
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: true

    - name: "Limpar cache"
      command: "bundle exec rails tmp:cache:clear"
      user: "deploy"
      run_on: "all_servers"
      fail_on_error: false

    - name: "Reiniciar Sidekiq"
      command: "bundle exec sidekiqctl quiet && bundle exec sidekiqctl stop"
      user: "deploy"
      run_on: "sidekiq_servers"
      fail_on_error: false